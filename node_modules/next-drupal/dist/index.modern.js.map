{"version":3,"file":"index.modern.js","sources":["../src/get-cache.ts","../src/get-access-token.ts","../src/utils.ts","../src/get-menu.ts","../src/get-resource-collection.ts","../src/get-paths.ts","../src/get-resource.ts","../src/preview.ts","../src/get-resource-type.ts","../src/get-view.ts","../src/use-menu.tsx"],"sourcesContent":["import NodeCache from \"node-cache\"\n\nexport const cache = new NodeCache()\n","import { cache } from \"./get-cache\"\nimport { AccessToken } from \"./types\"\n\nconst CACHE_KEY = \"NEXT_DRUPAL_ACCESS_TOKEN\"\n\nexport async function getAccessToken(): Promise<AccessToken> {\n  if (!process.env.DRUPAL_CLIENT_ID || !process.env.DRUPAL_CLIENT_SECRET) {\n    return null\n  }\n\n  const cached = cache.get<AccessToken>(CACHE_KEY)\n  if (cached?.access_token) {\n    return cached\n  }\n\n  const basic = Buffer.from(\n    `${process.env.DRUPAL_CLIENT_ID}:${process.env.DRUPAL_CLIENT_SECRET}`\n  ).toString(\"base64\")\n\n  const response = await fetch(\n    `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}/oauth/token`,\n    {\n      method: \"POST\",\n      headers: {\n        Authorization: `Basic ${basic}`,\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\n      },\n      body: `grant_type=client_credentials`,\n    }\n  )\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const result: AccessToken = await response.json()\n\n  cache.set(CACHE_KEY, result, result.expires_in)\n\n  return result\n}\n","import { GetStaticPropsContext } from \"next\"\nimport Jsona from \"jsona\"\nimport { getAccessToken } from \"./get-access-token\"\nimport { AccessToken, Locale } from \"./types\"\nimport { stringify } from \"qs\"\n\nconst JSONAPI_PREFIX = process.env.DRUPAL_JSONAPI_PREFIX || \"/jsonapi\"\n\nconst dataFormatter = new Jsona()\n\nexport function deserialize(body, options?) {\n  if (!body) return null\n\n  return dataFormatter.deserialize(body, options)\n}\n\nexport async function getJsonApiPathForResourceType(\n  type: string,\n  locale?: Locale\n) {\n  const index = await getJsonApiIndex(locale)\n\n  return index?.links[type]?.href\n}\n\nexport async function getJsonApiIndex(\n  locale?: Locale,\n  options?: {\n    accessToken?: AccessToken\n  }\n): Promise<{\n  links: {\n    [type: string]: {\n      href: string\n    }\n  }\n}> {\n  const url = buildUrl(\n    locale ? `/${locale}${JSONAPI_PREFIX}` : `${JSONAPI_PREFIX}`\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  return await response.json()\n}\n\nexport function buildUrl(\n  path: string,\n  params?: string | Record<string, string> | URLSearchParams\n): URL {\n  const url = new URL(\n    path.charAt(0) === \"/\"\n      ? `${process.env.NEXT_PUBLIC_DRUPAL_BASE_URL}${path}`\n      : path\n  )\n\n  if (params) {\n    // Use instead URLSearchParams for nested params.\n    url.search = stringify(params)\n  }\n\n  return url\n}\n\nexport async function buildHeaders({\n  accessToken,\n  headers = {\n    \"Content-Type\": \"application/json\",\n  },\n}: {\n  accessToken?: AccessToken\n  headers?: RequestInit[\"headers\"]\n} = {}): Promise<RequestInit[\"headers\"]> {\n  const token = accessToken || (await getAccessToken())\n  if (token) {\n    headers[\"Authorization\"] = `Bearer ${token.access_token}`\n  }\n\n  return headers\n}\n\nexport function getPathFromContext(\n  context: GetStaticPropsContext,\n  prefix = \"\"\n) {\n  let { slug } = context.params\n\n  slug = Array.isArray(slug) ? slug.join(\"/\") : slug\n\n  // Handle locale.\n  if (context.locale && context.locale !== context.defaultLocale) {\n    slug = `/${context.locale}/${slug}`\n  }\n\n  return !slug\n    ? process.env.DRUPAL_FRONT_PAGE\n    : prefix\n    ? `${prefix}/${slug}`\n    : slug\n}\n\nexport function syncDrupalPreviewRoutes(path) {\n  if (window && window.top !== window.self) {\n    window.parent.postMessage(\n      { type: \"NEXT_DRUPAL_ROUTE_SYNC\", path },\n      process.env.NEXT_PUBLIC_DRUPAL_BASE_URL\n    )\n  }\n}\n","import {\n  AccessToken,\n  DrupalMenuLinkContent,\n  JsonApiWithLocaleOptions,\n} from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getMenu(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  items: DrupalMenuLinkContent[]\n  tree: DrupalMenuLinkContent[]\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const url = buildUrl(`${localePrefix}/jsonapi/menu_items/${name}`)\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const items = options.deserialize ? deserialize(data) : data\n\n  const { items: tree } = buildMenuTree(items)\n\n  return {\n    items,\n    tree,\n  }\n}\n\nfunction buildMenuTree(\n  links: DrupalMenuLinkContent[],\n  parent: DrupalMenuLinkContent[\"id\"] = \"\"\n) {\n  const children = links.filter((link) => link.parent === parent)\n\n  return children.length\n    ? {\n        items: children.map((link) => ({\n          ...link,\n          ...buildMenuTree(links, link.id),\n        })),\n      }\n    : {}\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n} from \"./utils\"\n\nexport async function getResourceCollection<T = JsonApiResource[]>(\n  type: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(apiPath, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n\nexport async function getResourceCollectionFromContext<T = JsonApiResource[]>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    deserialize?: boolean\n    params?: JsonApiParams\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  // // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options.params,\n  //   }\n  // }\n\n  return await getResourceCollection<T>(type, {\n    ...options,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n  })\n}\n","import { GetStaticPathsContext, GetStaticPathsResult } from \"next\"\nimport { getResourceCollection } from \"./get-resource-collection\"\nimport { AccessToken, JsonApiParams, Locale } from \"./types\"\n\nexport async function getPathsFromContext(\n  types: string | string[],\n  context: GetStaticPathsContext,\n  options: {\n    params?: JsonApiParams\n    accessToken?: AccessToken\n  } = {}\n): Promise<GetStaticPathsResult[\"paths\"]> {\n  if (typeof types === \"string\") {\n    types = [types]\n  }\n\n  const paths = await Promise.all(\n    types.map(async (type) => {\n      // Use sparse fieldset to expand max size.\n      options.params = {\n        [`fields[${type}]`]: \"path\",\n        ...options?.params,\n      }\n\n      // const paths = await Promise.all(\n      //   context.locales.map(async (locale) => {\n      //     const resources = await getResourceCollection(type, {\n      //       deserialize: true,\n      //       locale,\n      //       defaultLocale: context.defaultLocale,\n      //       ...options,\n      //     })\n\n      //     return buildPathsFromResources(resources, locale)\n      //   })\n      // )\n\n      // return paths.flat()\n\n      // Handle localized path aliases\n      if (!context.locales?.length) {\n        const resources = await getResourceCollection(type, {\n          deserialize: true,\n          ...options,\n        })\n\n        return buildPathsFromResources(resources)\n      }\n\n      const paths = await Promise.all(\n        context.locales.map(async (locale) => {\n          const resources = await getResourceCollection(type, {\n            deserialize: true,\n            locale,\n            defaultLocale: context.defaultLocale,\n            ...options,\n          })\n\n          return buildPathsFromResources(resources, locale)\n        })\n      )\n\n      return paths.flat()\n    })\n  )\n\n  return paths.flat()\n}\n\nfunction buildPathsFromResources(resources, locale?: Locale) {\n  return resources?.flatMap((resource) => {\n    const slug =\n      resource?.path?.alias === process.env.DRUPAL_FRONT_PAGE\n        ? \"/\"\n        : resource?.path?.alias\n\n    const path = {\n      params: {\n        slug: `${slug?.replace(/^\\/|\\/$/g, \"\")}`.split(\"/\"),\n      },\n    }\n\n    if (locale) {\n      path[\"locale\"] = locale\n    }\n\n    return path\n  })\n}\n","import { GetStaticPropsContext } from \"next\"\nimport {\n  AccessToken,\n  JsonApiParams,\n  JsonApiWithLocaleOptions,\n  JsonApiResource,\n} from \"./types\"\nimport {\n  buildHeaders,\n  buildUrl,\n  deserialize,\n  getJsonApiPathForResourceType,\n  getPathFromContext,\n} from \"./utils\"\n\nexport async function getResourceFromContext<T extends JsonApiResource>(\n  type: string,\n  context: GetStaticPropsContext,\n  options?: {\n    prefix?: string\n    deserialize?: boolean\n    params?: JsonApiParams\n    accessToken?: AccessToken\n    isVersionable?: boolean\n  }\n): Promise<T> {\n  options = {\n    deserialize: true,\n    // Add support for revisions for node by default.\n    // TODO: Make this required before stable?\n    isVersionable: /^node--/.test(type),\n    ...options,\n  }\n\n  const path = getPathFromContext(context, options?.prefix)\n\n  // Filter out unpublished entities.\n  // if (!context.preview) {\n  //   options.params = {\n  //     \"filter[status]\": \"1\",\n  //     ...options?.params,\n  //   }\n  // }\n\n  const previewData = context.previewData as { resourceVersion?: string }\n\n  const resource = await getResourceByPath<T>(path, {\n    deserialize: options.deserialize,\n    isVersionable: options.isVersionable,\n    locale: context.locale,\n    defaultLocale: context.defaultLocale,\n    params: {\n      resourceVersion: previewData?.resourceVersion,\n      ...options?.params,\n    },\n  })\n\n  // If no locale is passed, skip entity if not default_langcode.\n  // This happens because decoupled_router will still translate the path\n  // to a resource.\n  // TODO: Figure out if we want this behavior.\n  // For now this causes a bug where a non-i18n sites builds (ISR) pages for\n  // localized pages.\n  if (!context.locale && !resource?.default_langcode) {\n    return null\n  }\n\n  return resource\n}\n\nexport async function getResourceByPath<T extends JsonApiResource>(\n  path: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n    isVersionable?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    isVersionable: false,\n    params: {},\n    ...options,\n  }\n\n  if (!path) {\n    return null\n  }\n\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    path.indexOf(options.locale) !== 1\n  ) {\n    path = path === \"/\" ? path : path.replace(/^\\/+/, \"\")\n    path = getPathFromContext({\n      params: { slug: [path] },\n      locale: options.locale,\n      defaultLocale: options.defaultLocale,\n    })\n  }\n\n  const { resourceVersion = \"rel:latest-version\", ...params } = options?.params\n  const resourceParams = new URLSearchParams({\n    ...params,\n  })\n\n  if (options.isVersionable) {\n    resourceParams.set(\"resourceVersion\", resourceVersion)\n  }\n\n  const payload = [\n    {\n      requestId: \"router\",\n      action: \"view\",\n      uri: `/router/translate-path?path=${path}&_format=json`,\n      headers: { Accept: \"application/vnd.api+json\" },\n    },\n    {\n      requestId: \"resolvedResource\",\n      action: \"view\",\n      uri: `{{router.body@$.jsonapi.individual}}?${resourceParams.toString()}`,\n      waitFor: [\"router\"],\n    },\n  ]\n\n  // Localized subrequests.\n  // I was hoping we would not need this but it seems like subrequests is not properly\n  // setting the jsonapi locale from a translated path.\n  let subrequestsPath = \"/subrequests\"\n  if (\n    options.locale &&\n    options.defaultLocale &&\n    options.locale !== options.defaultLocale\n  ) {\n    subrequestsPath = `/${options.locale}/subrequests`\n  }\n\n  const url = buildUrl(subrequestsPath, {\n    _format: \"json\",\n  })\n\n  const response = await fetch(url.toString(), {\n    method: \"POST\",\n    credentials: \"include\",\n    headers: await buildHeaders(options),\n    redirect: \"follow\",\n    body: JSON.stringify(payload),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  if (!json[\"resolvedResource#uri{0}\"]) {\n    return null\n  }\n\n  const data = JSON.parse(json[\"resolvedResource#uri{0}\"]?.body)\n\n  if (data.errors) {\n    throw new Error(data.errors[0].detail)\n  }\n\n  return options.deserialize ? deserialize(data) : data\n}\n\nexport async function getResource<T extends JsonApiResource>(\n  type: string,\n  uuid: string,\n  options?: {\n    accessToken?: AccessToken\n    deserialize?: boolean\n  } & JsonApiWithLocaleOptions\n): Promise<T> {\n  options = {\n    deserialize: true,\n    params: {},\n    ...options,\n  }\n\n  const apiPath = await getJsonApiPathForResourceType(\n    type,\n    options?.locale !== options?.defaultLocale ? options.locale : undefined\n  )\n\n  if (!apiPath) {\n    throw new Error(`Error: resource of type ${type} not found.`)\n  }\n\n  const url = buildUrl(`${apiPath}/${uuid}`, {\n    ...options?.params,\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return options.deserialize ? deserialize(json) : json\n}\n","import { NextApiRequest, NextApiResponse } from \"next\"\nimport { getResourceByPath } from \"./get-resource\"\nimport { JsonApiWithLocaleOptions } from \"./types\"\n\ninterface PreviewOptions {\n  errorMessages?: {\n    secret?: string\n    slug?: string\n  }\n}\n\nexport function DrupalPreview(options?: PreviewOptions) {\n  return (request, response) => PreviewHandler(request, response, options)\n}\n\nexport async function PreviewHandler(\n  request?: NextApiRequest,\n  response?: NextApiResponse,\n  options?: PreviewOptions\n) {\n  const { slug, resourceVersion, secret, locale, defaultLocale } = request.query\n\n  if (secret !== process.env.DRUPAL_PREVIEW_SECRET) {\n    return response.status(401).json({\n      message: options?.errorMessages.secret || \"Invalid preview secret.\",\n    })\n  }\n\n  if (!slug) {\n    return response\n      .status(401)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug.\" })\n  }\n\n  let _options: GetResourcePreviewUrlOptions = {\n    isVersionable: typeof resourceVersion !== \"undefined\",\n  }\n  if (locale && defaultLocale) {\n    _options = {\n      ..._options,\n      locale: locale as string,\n      defaultLocale: defaultLocale as string,\n    }\n  }\n\n  const url = await getResourcePreviewUrl(slug as string, _options)\n\n  if (!url) {\n    response\n      .status(404)\n      .end({ message: options?.errorMessages.slug || \"Invalid slug\" })\n  }\n\n  response.setPreviewData({\n    resourceVersion,\n  })\n\n  response.writeHead(307, { Location: url })\n\n  return response.end()\n}\n\ntype GetResourcePreviewUrlOptions = JsonApiWithLocaleOptions & {\n  isVersionable?: boolean\n}\n\nexport async function getResourcePreviewUrl(\n  slug: string,\n  options?: GetResourcePreviewUrlOptions\n) {\n  const entity = await getResourceByPath(slug, options)\n\n  if (!entity) {\n    return null\n  }\n\n  if (!entity?.path) {\n    throw new Error(\n      `Error: the path attribute is missing for entity type ${entity.type}`\n    )\n  }\n\n  return entity?.default_langcode\n    ? entity.path.alias\n    : `/${entity.path.langcode}${entity.path.alias}`\n}\n","import { GetStaticPropsContext } from \"next\"\nimport { AccessToken } from \"./types\"\nimport { buildHeaders, buildUrl, getPathFromContext } from \"./utils\"\n\nexport async function getResourceTypeFromContext(\n  context: GetStaticPropsContext,\n  options?: {\n    accessToken?: AccessToken\n    prefix?: string\n  }\n): Promise<string> {\n  options = {\n    prefix: \"\",\n    ...options,\n  }\n  const url = buildUrl(\"/router/translate-path\", {\n    path: getPathFromContext(context, options.prefix),\n  })\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (response.status === 404) {\n    return null\n  }\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const json = await response.json()\n\n  return json.jsonapi.resourceName\n}\n","import { AccessToken, JsonApiWithLocaleOptions } from \"./types\"\nimport { buildHeaders, buildUrl, deserialize } from \"./utils\"\n\nexport async function getView<T>(\n  name: string,\n  options?: {\n    deserialize?: boolean\n    accessToken?: AccessToken\n  } & JsonApiWithLocaleOptions\n): Promise<{\n  results: T\n  /* eslint-disable  @typescript-eslint/no-explicit-any */\n  meta: Record<string, any>\n  links: {\n    [key in \"next\" | \"prev\" | \"self\"]?: {\n      href: \"string\"\n    }\n  }\n}> {\n  options = {\n    deserialize: true,\n    ...options,\n  }\n\n  const localePrefix =\n    options?.locale && options.locale !== options.defaultLocale\n      ? `/${options.locale}`\n      : \"\"\n\n  const [viewId, displayId] = name.split(\"--\")\n\n  const url = buildUrl(\n    `${localePrefix}/jsonapi/views/${viewId}/${displayId}`,\n    options.params\n  )\n\n  const response = await fetch(url.toString(), {\n    headers: await buildHeaders(options),\n  })\n\n  if (!response.ok) {\n    throw new Error(response.statusText)\n  }\n\n  const data = await response.json()\n\n  const results = options.deserialize ? deserialize(data) : data\n\n  return {\n    results,\n    meta: data.meta,\n    links: data.links,\n  }\n}\n","import * as React from \"react\"\nimport { useRouter } from \"next/router\"\n\nimport { getMenu } from \"./get-menu\"\nimport { DrupalMenuLinkContent } from \"./types\"\n\nexport function useMenu(\n  name: string\n): {\n  items: DrupalMenuLinkContent[]\n  tree: DrupalMenuLinkContent[]\n  error: unknown\n  isLoading: boolean\n} {\n  const router = useRouter()\n  const [data, setData] = React.useState<{\n    items: DrupalMenuLinkContent[]\n    tree: DrupalMenuLinkContent[]\n  }>(null)\n  const [error, setError] = React.useState(null)\n  const [isLoading, setIsLoading] = React.useState<boolean>(false)\n\n  React.useEffect(() => {\n    const fetchMenuItems = async () => {\n      setIsLoading(true)\n      try {\n        const data = await getMenu(name, {\n          locale: router.locale,\n          defaultLocale: router.defaultLocale,\n        })\n        setData(data)\n        setIsLoading(false)\n      } catch (error) {\n        setError(error)\n        setIsLoading(false)\n      }\n    }\n    fetchMenuItems()\n  }, [router.locale])\n\n  return { ...data, error, isLoading }\n}\n"],"names":["cache","NodeCache","CACHE_KEY","getAccessToken","process","env","DRUPAL_CLIENT_ID","DRUPAL_CLIENT_SECRET","cached","get","access_token","basic","Buffer","from","toString","response","fetch","NEXT_PUBLIC_DRUPAL_BASE_URL","method","headers","Authorization","body","ok","Error","statusText","result","json","set","expires_in","JSONAPI_PREFIX","DRUPAL_JSONAPI_PREFIX","dataFormatter","Jsona","deserialize","options","getJsonApiPathForResourceType","type","locale","index","getJsonApiIndex","links","href","url","buildUrl","buildHeaders","path","params","URL","charAt","search","stringify","accessToken","token","getPathFromContext","context","prefix","slug","Array","isArray","join","defaultLocale","DRUPAL_FRONT_PAGE","syncDrupalPreviewRoutes","window","top","self","parent","postMessage","getMenu","name","localePrefix","data","items","tree","buildMenuTree","children","filter","link","length","map","id","getResourceCollection","apiPath","undefined","getResourceCollectionFromContext","getPathsFromContext","types","paths","Promise","all","locales","resources","buildPathsFromResources","flat","flatMap","resource","alias","replace","split","getResourceFromContext","isVersionable","test","previewData","getResourceByPath","resourceVersion","default_langcode","indexOf","resourceParams","URLSearchParams","payload","requestId","action","uri","Accept","waitFor","subrequestsPath","_format","credentials","redirect","JSON","parse","errors","detail","getResource","uuid","DrupalPreview","request","PreviewHandler","secret","query","DRUPAL_PREVIEW_SECRET","status","message","errorMessages","end","_options","getResourcePreviewUrl","setPreviewData","writeHead","Location","entity","langcode","getResourceTypeFromContext","jsonapi","resourceName","getView","viewId","displayId","results","meta","useMenu","router","useRouter","setData","React","error","setError","isLoading","setIsLoading","fetchMenuItems"],"mappings":"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"}